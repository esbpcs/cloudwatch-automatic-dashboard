name: Decommission Environment

on:
  workflow_dispatch:
    inputs:
      company_name:
        description: "The name of the company or client to decommission (e.g., acme-corp)."
        required: true
      environment_name:
        description: "The name of the environment to decommission (e.g., production, staging)."
        required: true
      aws_region:
        description: "AWS Region for the deployment."
        required: true
        default: "us-east-1"

permissions:
  id-token: write
  contents: read

jobs:
  delete_application_stack:
    name: 1. Delete Application Stack
    runs-on: ubuntu-latest
    environment:
      # Targets the correct composite GitHub Environment
      name: ${{ github.event.inputs.company_name }}-${{ github.event.inputs.environment_name }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Load Config
        id: load_config
        run: |
          COMPOSITE_ENV_NAME="${{ github.event.inputs.company_name }}-${{ github.event.inputs.environment_name }}"
          CONFIG_JSON=$(jq -r --arg TARGET_ENV "$COMPOSITE_ENV_NAME" '.[$TARGET_ENV]' config.json)
          echo "STACK_NAME=$(echo "$CONFIG_JSON" | jq -r '.Name')" >> $GITHUB_ENV
          echo "SSM_PARAM_NAME=$(echo "$CONFIG_JSON" | jq -r '.ssm_parameter_for_role')" >> $GITHUB_ENV
      - name: Configure AWS Credentials for Tooling Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.TOOLING_ACCOUNT_OIDC_ROLE_ARN }}
          aws-region: ${{ github.event.inputs.aws_region }}
      - name: Get and Assume Application Role
        id: get_role
        run: |
          TARGET_ROLE_ARN=$(aws ssm get-parameter --name "${{ env.SSM_PARAM_NAME }}" --with-decryption --query "Parameter.Value" --output text)
          echo "aws_role_to_assume=${TARGET_ROLE_ARN}" >> $GITHUB_ENV
      - name: Assume Final Deployment Role in Target Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.aws_role_to_assume }}
          aws-region: ${{ github.event.inputs.aws_region }}
      - name: Delete Application Stack
        run: |
          aws cloudformation delete-stack --stack-name ${{ env.STACK_NAME }}
          echo "Waiting for stack deletion to complete..."
          aws cloudformation wait stack-delete-complete --stack-name ${{ env.STACK_NAME }}

  delete_client_role_stack:
    name: 2. Delete Client Role Stack
    runs-on: ubuntu-latest
    needs: delete_application_stack
    environment:
      name: ${{ github.event.inputs.company_name }}-${{ github.event.inputs.environment_name }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
      - name: Configure AWS Credentials for Target Account (using Management Connector)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.MANAGEMENT_CONNECTOR_ROLE_ARN }}
          aws-region: ${{ github.event.inputs.aws_region }}
      - name: Delete Client IAM Role Stack
        run: |
          STACK_NAME="${{ github.event.inputs.company_name }}-${{ github.event.inputs.environment_name }}-dashboard-client"
          aws cloudformation delete-stack --stack-name $STACK_NAME
          echo "Waiting for stack deletion to complete..."
          aws cloudformation wait stack-delete-complete --stack-name $STACK_NAME

  delete_ssm_parameter:
    name: 3. Delete SSM Parameter Link
    runs-on: ubuntu-latest
    needs: delete_client_role_stack
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
      - name: Configure AWS Credentials for Tooling Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.TOOLING_ACCOUNT_OIDC_ROLE_ARN }}
          aws-region: ${{ github.event.inputs.aws_region }}
      - name: Delete SSM Parameter
        run: |
          PARAMETER_NAME="/github/${{ github.event.inputs.company_name }}/${{ github.event.inputs.environment_name }}/dashboard/role-arn"
          aws ssm delete-parameter --name "$PARAMETER_NAME"
